{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAW5C,MAAM,OAAO,gBAAiB,SAAQ,SAAS;IAO7C;QACE,KAAK,CAAC;YACJ,IAAI,EAAE,eAAe;YACrB,SAAS,EAAE,CAAC,KAAK,CAAC;SACnB,CAAC,CAAC;QAVL;;;WAGG;QACK,iBAAY,GAAY,KAAK,CAAC;IAOtC,CAAC;IAED,KAAK,CAAC,KAAK,CAAC,OAA6B;;QACvC,MAAM,SAAS,CAAC,YAAY;aACzB,YAAY,CAAC;YACZ,KAAK,EAAE,CAAC,OAAO,CAAC,YAAY;YAC5B,KAAK,EAAE,IAAI;SACZ,CAAC;aACD,IAAI,CAAC,CAAC,MAAmB,EAAE,EAAE;YAC5B,kGAAkG;YAClG,MAAM,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;QACtD,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACf,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;QAEL,MAAM,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAC/C,MAAM,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,KAAI,EAAE,CAAC,CAAC;QAE9D,IAAI,CAAC,KAAK,EAAE,CAAC;YACX,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YACrD,YAAY,CAAC,EAAE,GAAG,OAAO,CAAC;YAC1B,YAAY,CAAC,YAAY,CAAC,OAAO,EAAE,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,SAAS,KAAI,EAAE,CAAC,CAAC;YAE7D,iDAAiD;YACjD,IAAI,OAAO,CAAC,QAAQ,KAAK,MAAM,EAAE,CAAC;gBAChC,YAAY,CAAC,YAAY,CACvB,OAAO,EACP,uDAAuD,CACxD,CAAC;YACJ,CAAC;YAED,MAAM,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;YACpD,MAAM,QAAQ,GACZ,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAEhE,mHAAmH;YACnH,4EAA4E;YAC5E,uFAAuF;YACvF,IAAI,QAAQ,EAAE,CAAC;gBACb,YAAY,CAAC,YAAY,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;gBAC9C,YAAY,CAAC,YAAY,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;gBAC3C,YAAY,CAAC,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;YACnD,CAAC;YAED,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,WAAW,CAAC,YAAY,CAAC,CAAC;YAElC,IAAI,MAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,YAAY,0CAAE,YAAY,EAAE,CAAC;gBAC1C,MAAM,WAAW,GAA2B;oBAC1C,KAAK,EAAE;wBACL,KAAK,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE;wBAC/B,MAAM,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,MAAM,EAAE;qBAClC;iBACF,CAAC;gBAEF,IAAI,OAAO,CAAC,QAAQ,KAAK,MAAM,EAAE,CAAC;oBAC/B,WAAW,CAAC,KAA+B,CAAC,UAAU;wBACrD,aAAa,CAAC;oBAChB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBAC3B,CAAC;qBAAM,CAAC;oBACN,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC5B,CAAC;gBAED,MAAM,IAAI,GAAG,IAAI,CAAC;gBAClB,MAAM,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,IAAI,CACzD,CAAC,MAAM,EAAE,EAAE;oBACT,IAAI,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,CAAC;wBACrC,kDAAkD;wBAClD,YAAY,CAAC,SAAS,GAAG,MAAM,CAAC;wBAChC,YAAY,CAAC,IAAI,EAAE,CAAC;wBACpB,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;oBACtB,CAAC;yBAAM,CAAC;wBACN,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;wBACxB,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC,CAAC;oBACtD,CAAC;gBACH,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;oBACN,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;gBACjC,CAAC,CACF,CAAC;YACJ,CAAC;YACD,OAAO,EAAE,oBAAoB,EAAE,KAAK,EAAE,CAAC;QACzC,CAAC;aAAM,CAAC;YACN,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC,CAAC;YACpD,OAAO,EAAE,oBAAoB,EAAE,KAAK,EAAE,CAAC;QACzC,CAAC;IACH,CAAC;IAEO,UAAU,CAAC,MAAW;QAC5B,IAAI,MAAM,EAAE,CAAC;YACX,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC;YAElC,KAAK,MAAM,KAAK,IAAI,MAAM;gBAAE,KAAK,CAAC,IAAI,EAAE,CAAC;QAC3C,CAAC;IACH,CAAC;IAED,KAAK,CAAC,IAAI;QACR,MAAM,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAqB,CAAC;QACnE,IAAI,KAAK,EAAE,CAAC;YACV,KAAK,CAAC,KAAK,EAAE,CAAC;YAEd,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAEjC,KAAK,CAAC,MAAM,EAAE,CAAC;QACjB,CAAC;IACH,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,OAAoC;QAChD,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,MAAM,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAqB,CAAC;YACnE,IAAI,CAAC,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,SAAS,CAAA,EAAE,CAAC;gBACtB,MAAM,CAAC,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC,CAAC;gBAC3C,OAAO;YACT,CAAC;YAED,mCAAmC;YAEnC,IAAI,kBAAkB,CAAC;YAEvB,IAAI,KAAK,IAAI,KAAK,CAAC,UAAU,GAAG,CAAC,IAAI,KAAK,CAAC,WAAW,GAAG,CAAC,EAAE,CAAC;gBAC3D,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBAChD,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBACxC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC;gBAChC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC;gBAElC,2CAA2C;gBAC3C,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;oBACvB,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,SAAS,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;oBACxC,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACxB,CAAC;gBACD,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,SAAS,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;gBAErE,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,MAAM,CAAC,KAAK,MAAM,EAAE,CAAC;oBAC1C,kBAAkB,GAAG,MAAM;yBACxB,SAAS,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC,GAAG,KAAK,CAAC;yBACxD,OAAO,CAAC,yBAAyB,EAAE,EAAE,CAAC,CAAC;gBAC5C,CAAC;qBAAM,CAAC;oBACN,kBAAkB,GAAG,MAAM;yBACxB,SAAS,CAAC,WAAW,CAAC;yBACtB,OAAO,CAAC,wBAAwB,EAAE,EAAE,CAAC,CAAC;gBAC3C,CAAC;YACH,CAAC;YAED,OAAO,CAAC;gBACN,KAAK,EAAE,kBAAkB;aAC1B,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,QAA6B;QAC/C,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAChC,CAAC;IAED,KAAK,CAAC,eAAe;QACnB,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;IAC1E,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,QAA8B;QACnD,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAC;QAC1C,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;IAC3E,CAAC;IAED,KAAK,CAAC,sBAAsB;QAG1B,MAAM,IAAI,KAAK,CACb,6DAA6D,CAC9D,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,gBAAgB;QAGpB,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;IAC3E,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,QAElB;QACC,MAAM,IAAI,KAAK,CACb,oDAAoD,QAAQ,EAAE,CAC/D,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,IAAI;QACR,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;IAC/D,CAAC;IAED,KAAK,CAAC,wBAAwB;QAM5B,MAAM,IAAI,KAAK,CAAC,+DAA+D,CAAC,CAAC;IACnF,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,QAA8B;QAC7C,MAAM,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAqB,CAAC;QACnE,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,QAAQ,CAAC,OAAO;YAC/B,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,EAAE,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;IACpE,CAAC;CACF","sourcesContent":["import { WebPlugin } from \"@capacitor/core\";\n\nimport type {\n  CameraOpacityOptions,\n  CameraPreviewFlashMode,\n  CameraPreviewOptions,\n  CameraPreviewPictureOptions,\n  CameraPreviewPlugin,\n  CameraSampleOptions,\n} from \"./definitions\";\n\nexport class CameraPreviewWeb extends WebPlugin implements CameraPreviewPlugin {\n  /**\n   *  track which camera is used based on start options\n   *  used in capture\n   */\n  private isBackCamera: boolean = false;\n\n  constructor() {\n    super({\n      name: \"CameraPreview\",\n      platforms: [\"web\"],\n    });\n  }\n\n  async start(options: CameraPreviewOptions): Promise<{ depthParamsSupported: boolean }> {\n    await navigator.mediaDevices\n      .getUserMedia({\n        audio: !options.disableAudio,\n        video: true,\n      })\n      .then((stream: MediaStream) => {\n        // Stop any existing stream so we can request media with different constraints based on user input\n        stream.getTracks().forEach((track) => track.stop());\n      })\n      .catch((error) => {\n        Promise.reject(error);\n      });\n\n    const video = document.getElementById(\"video\");\n    const parent = document.getElementById(options?.parent || \"\");\n\n    if (!video) {\n      const videoElement = document.createElement(\"video\");\n      videoElement.id = \"video\";\n      videoElement.setAttribute(\"class\", options?.className || \"\");\n\n      // Don't flip video feed if camera is rear facing\n      if (options.position !== \"rear\") {\n        videoElement.setAttribute(\n          \"style\",\n          \"-webkit-transform: scaleX(-1); transform: scaleX(-1);\",\n        );\n      }\n\n      const userAgent = navigator.userAgent.toLowerCase();\n      const isSafari =\n        userAgent.includes(\"safari\") && !userAgent.includes(\"chrome\");\n\n      // Safari on iOS needs to have the autoplay, muted and playsinline attributes set for video.play() to be successful\n      // Without these attributes videoElement.play() will throw a NotAllowedError\n      // https://developer.apple.com/documentation/webkit/delivering_video_content_for_safari\n      if (isSafari) {\n        videoElement.setAttribute(\"autoplay\", \"true\");\n        videoElement.setAttribute(\"muted\", \"true\");\n        videoElement.setAttribute(\"playsinline\", \"true\");\n      }\n\n      parent?.appendChild(videoElement);\n\n      if (navigator?.mediaDevices?.getUserMedia) {\n        const constraints: MediaStreamConstraints = {\n          video: {\n            width: { ideal: options.width },\n            height: { ideal: options.height },\n          },\n        };\n\n        if (options.position === \"rear\") {\n          (constraints.video as MediaTrackConstraints).facingMode =\n            \"environment\";\n          this.isBackCamera = true;\n        } else {\n          this.isBackCamera = false;\n        }\n\n        const self = this;\n        await navigator.mediaDevices.getUserMedia(constraints).then(\n          (stream) => {\n            if (document.getElementById(\"video\")) {\n              // video.src = window.URL.createObjectURL(stream);\n              videoElement.srcObject = stream;\n              videoElement.play();\n              Promise.resolve({});\n            } else {\n              self.stopStream(stream);\n              Promise.reject(new Error(\"camera already stopped\"));\n            }\n          },\n          (err) => {\n            Promise.reject(new Error(err));\n          },\n        );\n      }\n      return { depthParamsSupported: false };\n    } else {\n      Promise.reject(new Error(\"camera already started\"));\n      return { depthParamsSupported: false };\n    }\n  }\n\n  private stopStream(stream: any) {\n    if (stream) {\n      const tracks = stream.getTracks();\n\n      for (const track of tracks) track.stop();\n    }\n  }\n\n  async stop(): Promise<any> {\n    const video = document.getElementById(\"video\") as HTMLVideoElement;\n    if (video) {\n      video.pause();\n\n      this.stopStream(video.srcObject);\n\n      video.remove();\n    }\n  }\n\n  async capture(options: CameraPreviewPictureOptions): Promise<any> {\n    return new Promise((resolve, reject) => {\n      const video = document.getElementById(\"video\") as HTMLVideoElement;\n      if (!video?.srcObject) {\n        reject(new Error(\"camera is not running\"));\n        return;\n      }\n\n      // video.width = video.offsetWidth;\n\n      let base64EncodedImage;\n\n      if (video && video.videoWidth > 0 && video.videoHeight > 0) {\n        const canvas = document.createElement(\"canvas\");\n        const context = canvas.getContext(\"2d\");\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n\n        // flip horizontally back camera isn't used\n        if (!this.isBackCamera) {\n          context?.translate(video.videoWidth, 0);\n          context?.scale(-1, 1);\n        }\n        context?.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n\n        if ((options.format || \"jpeg\") === \"jpeg\") {\n          base64EncodedImage = canvas\n            .toDataURL(\"image/jpeg\", (options.quality || 85) / 100.0)\n            .replace(\"data:image/jpeg;base64,\", \"\");\n        } else {\n          base64EncodedImage = canvas\n            .toDataURL(\"image/png\")\n            .replace(\"data:image/png;base64,\", \"\");\n        }\n      }\n\n      resolve({\n        value: base64EncodedImage,\n      });\n    });\n  }\n\n  async captureSample(_options: CameraSampleOptions): Promise<any> {\n    return this.capture(_options);\n  }\n\n  async stopRecordVideo(): Promise<any> {\n    throw new Error(\"stopRecordVideo not supported under the web platform\");\n  }\n\n  async startRecordVideo(_options: CameraPreviewOptions): Promise<any> {\n    console.log(\"startRecordVideo\", _options);\n    throw new Error(\"startRecordVideo not supported under the web platform\");\n  }\n\n  async getSupportedFlashModes(): Promise<{\n    result: CameraPreviewFlashMode[];\n  }> {\n    throw new Error(\n      \"getSupportedFlashModes not supported under the web platform\",\n    );\n  }\n\n  async getHorizontalFov(): Promise<{\n    result: any;\n  }> {\n    throw new Error(\"getHorizontalFov not supported under the web platform\");\n  }\n\n  async setFlashMode(_options: {\n    flashMode: CameraPreviewFlashMode | string;\n  }): Promise<void> {\n    throw new Error(\n      `setFlashMode not supported under the web platform${_options}`,\n    );\n  }\n\n  async flip(): Promise<{ depthParamsSupported: boolean }> {\n    throw new Error(\"flip not supported under the web platform\");\n  }\n\n  async getSupportedPictureSizes(): Promise<{\n    supportedPictureSizes: {\n      facing: string;\n      supportedPictureSizes: { width: number; height: number }[];\n    }[];\n  }> {\n    throw new Error(\"getSupportedPictureSizes not supported under the web platform\");\n  }\n\n  async setOpacity(_options: CameraOpacityOptions): Promise<any> {\n    const video = document.getElementById(\"video\") as HTMLVideoElement;\n    if (!!video && !!_options.opacity)\n      video.style.setProperty(\"opacity\", _options.opacity.toString());\n  }\n}\n"]}